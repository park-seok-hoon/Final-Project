@charset "utf-8";

//모든 페이지 공통 CSS

//변수선언
$main-color: #1C1C1C;
$min-width: 1200px;

/* base */
//브라우저 초기화 작업
//기본 폰트 설정
@font-face {
    font-family: 'Pretendard';
    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: 'Pretendard';
    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Medium.woff') format('woff');
    font-weight: 500;
    font-style: normal;
}
@font-face {
    font-family: 'Pretendard';
    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Bold.woff') format('woff');
    font-weight: 700;
    font-style: normal;
}
@font-face {
    font-family: 'Pretendard';
    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Black.woff') format('woff');
    font-weight: 800;
    font-style: normal;
}
*{
    padding: 0; margin: 0; //태그별로 다른 여백을 없애고 시작
    font-family: 'Pretendard'; //모든 글꼴은 프리텐다드로 설정
    font-size: 16px; //제일 많이 쓰는 문단의 크기 지정
    color: $main-color; //글자색도 메인컬러로 처리
    box-sizing: border-box; //테두리와 패딩수치를 영역안으로 인사이드 처리
}
li{ list-style: none; } //번호/기호 없애고 시작
a{ text-decoration: none; } //밑줄 없애고 시작
img{ display: block; } //원래 인라인블록이어서 생기는 불필요한 여백 제거
button{ cursor: pointer; } //a태그에만 존재하는 마우스 오버시 커서 포인터를 버튼에도 설정
table{
    border-collapse: collapse; //선겹침허용
    border-spacing: 0; //셀(th, td)들간의 여백을 없애고 시작
}
label.away{ //붙여서 쓰면 label태그가 갖은 클래스, 떨어트려서 쓰면 label태그의 후손인 away
    position: absolute; left: -999em; //화면 밖으로 글자를 날려라~ 이런 뜻
    //em은 등배단위 -999배 만큼... 그러니까 화면에 있지도 말아라 이런 뜻
    //display: none;을 받는 요소는 스크린리더기가 읽지 못함
}
fieldset{
    border: none; //폼구역에 자동으로 생기는 테두리를 제거
}
textarea{
    resize: vertical; //사이즈 변경은 세로만
}



/* header */
header{
    width: 100%; min-width: $min-width;
    height: 100px;
    position: fixed; top: 0; left: 0; //스크롤바 위치를 따라다님
    z-index: 5000; //메인이미지도 앱솔루트 받아서 깔릴 수 있기 때문에 깊이 설정
    display: flex; //자손요소를 수평나열처리
    justify-content: space-between; //첫번째와 마지막을 양쪽 끝에 붙이고 균등배분
    align-items: center; //flex받은 자손을 세로 가운데 오게 처리

    transition: 0.3s; //css변화에 시간차 처리

    .black{ //블랙이미지들만 안보이게 처리
        display: none;
    }
}
header h1{
    padding: 0 30px; //앞상하 뒷좌우
}
.gnb{ //태그는 그냥, 클래스는 앞에 .붙임
    > ul{ 
        display: flex; //자손요소를 수평나열 처리 

        > li{
            padding: 0 32px; //앞상하 뒷좌우
            position: relative; //앱솔루트 받은 자손의 기준을 현재 요소로 변경

            > a{
                color: #fff; //글자는 글자를 감싼 최종태그에 처리
                display: block; height: 100px;
                line-height: 100px;
            }
        }
    }
}

//header에서 창사이즈 줄이면 무너져서 처리하는 미디어쿼리 코드
@media screen and (max-width: 1400px){ //창사이즈가 1400px이하가 된다면?
    .gnb{
        > ul{
            >li{
                padding: 0 24px; //창사이즈가 1400px이하이면 여백을 줄임
            }
        }
    }
}


.top-nav{
    margin-right: 22px;
    > ul{
        display: flex; //자손요소를 수평나열 처리
        align-items: center; //세로 가운데 처리

        > li{
            margin: 0 8px;

            > a{
                color: #fff; font-size: 14px;
            }
        }
    }
}

//하위메뉴 배경
.gnb-bg{
    display: none; //처음엔 안보이게 처리
    width: 100%; min-width: $min-width;
    background-color: #fff;

    //메인이미지 위에 겹쳐야 하므로 앱솔루트 처리
    position: absolute; top: 100px; left: 0; z-index: 5100;
    border-bottom: 1px solid #999;
}

//하위메뉴
.sub-nav{
    display: none; //처음엔 안보이게 처리

    //위치 지정위해 앱솔루트 처리
    position: absolute; top: 100px; left: 0; 
    z-index: 5200; //하위메뉴 배경보다 높게 처리해야 함
    width: 100%;
    text-align: center; //자손/후손 글자가 가로 가운데 처리
    padding: 36px 0; //앞상하 뒷좌우

    li{
        margin-bottom: 36px;

        &:last-child{ margin-bottom: 0; }
    }
    a:hover{ //a태그한테 마우스를 올리면
        border-bottom: 1px solid $main-color;
        padding-bottom: 3px; //수치조절에 따라 선과 글자의 간격을 조절할 수 있음
    }
}


/* header active, scroll */
header.active, header.scroll, header.detail{ //header에 active클래스가 주어지면 줄 CSS
    background-color: #fff; //배경색이 흰색
    border-bottom: 1px solid #999;

    .gnb > ul > li > a{ color: $main-color; }
    .top-nav > ul > li > a{ color: $main-color; }
    
    //검은 이미지 보이게 처리
    .black{ display: block; }

    //흰 이미지 안보이게 처리
    .white{ display: none; }
}

header.detail{
    position: absolute;
}


/* footer */
footer{
    width: 100%; 
    min-width: $min-width; //디자인의 최소 컨텐츠 폭 작성
    height: 300px;
    background-color: $main-color;
    padding: 50px 0; //앞상하 뒷좌우
}
.inner-wrap{
    width: 1200px; height: 100%;
    margin: 0 auto; //블록요소가 부모영역에서 가로 가운데 오는 공식
}

.footer-top{
    width: 100%; //부모 영역상속 - 그러니까 1200px;
    height: 150px;
    display: flex; //자손요소를 수평나열 처리
    justify-content: space-between; //첫번째 자손과 마지막 자손을 양쪽 끝에 붙이고 균등 배분 => 하지만 2개 있다면 그냥 양쪽 끝에 붙임
}
.sns-box{
    h3{ //sns-box가 갖고 있는 자손 혹은 후손을 선택
        color: #FFF;
        font-size: 36px;
        font-weight: 800;
        margin-bottom: 16px; //아래쪽 여백
        //margin은 동위선택자(형제)와의 간격 조정할 때 사용
        //padding은 기준과 자손과의 간격 조정할 때 사용
    }
    ul{
        display: flex; //자손요소를 수평나열 처리
    }
    li{
        margin-right: 8px; //형제와의 간격 조정
    }
}

.footer-nav{
    ul{
        display: flex; //자손요소를 수평나열 처리
    }
    li{
        margin-left: 16px; //margin-right로 주면 마지막 거에 여백생김
    }
    a{ //일단 글자가 안보이니까 최종태그에 글자 설정
        color: #FFF;
        font-size: 14px;
    }
}

.footer-bottom{
    width: 100%; //부모영역 전부 상속
    height: 50px; //푸터300-여백100-형150 = 50
    border-top: 2px solid #FFF;
    display: flex; //자손요소를 수평나열 처리
    justify-content: space-between; //자손을 양쪽 끝으로 붙임
    align-items: flex-end; //자손의 높이에서 세로 아래 붙이기
    p{
        color: #FFF;
        font-size: 14px;
    }
}


/* search-box */
.search-box{
    display: none; //처음엔 안보이게 처리
    width: 100%; //화면의 100%
    min-width: $min-width; //배경색 들어가서 잘리지 않게 최소사이즈 처리
    height: 100px; //header 전부 가리기
    background-color: #fff; //실제 들어가는 흰색
    position: fixed; //header위로 올려야 함
    top: 0; left: 0; z-index: 6000; //헤더보다 앞에 나오도록 5000보다 높은 수치로 처리
    padding-top: 25px; //자손이나 후손을 현재 요소와 떨어트리기 위해 사용

    a{
        //절대적 위치 처리
        position: absolute;
        top: 38px; right: 38px;
    }

    #search-input{
        width: 500px; height: 50px;
        border: 1px solid $main-color;
        margin: 0 auto; //블록요소가 부모영역에서 가로 가운데 오게 처리
        display: block; //input태그는 원래 inline-block요소
        padding-left: 47px; //테두리 안쪽 여백도 됨
        background-image: url(../images/common/search_icon.svg);
        //배경이미지는 무조건 반복 - 막아야 함
        background-repeat: no-repeat; //반복안함
        background-position: 10px center; //x축위치 y축위치
    }
}


/* scroll-btn */
.scroll-btn{
    position: fixed; //스크롤바 따라다니게 처리
    right: 10px; bottom: 50px; z-index: 6000; //다른 이미지보다 위에 올라오게 처리
}


/* btn-hover */
.btn-hover{
    position: relative; //새롭게 추가할 선의 앱솔루트 기준을 현재 요소로 변경

    &::after{ //선택자에 뒤에 컨텐츠 추가
        content: ''; //원래 content속성으로 글자나 이미지를 추가 - 하지만 우리 선줄거라 빈글자로 처리
        position: absolute; left: 0; bottom: 0;
        width: 100%; height: 2px; 
        background-color: $main-color;

        transform: scaleX(0); //x축크기를 0으로 처리
        transition: 0.3s; //CSS변화에 시간차 처리
    }

    &:hover::after{ //버튼에 마우스 올렸을 때 뒤에 처리한 컨텐츠를 선택
        transform: scaleX(1); //x축크기를 0으로 처리
    }
}